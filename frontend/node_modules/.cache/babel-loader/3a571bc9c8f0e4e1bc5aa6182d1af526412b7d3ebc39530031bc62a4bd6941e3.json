{"ast":null,"code":"var _jsxFileName = \"/Users/ethan/WebstormProjects/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport EventForm from './components/EventForm';\nimport EventList from './components/EventList';\nimport EventTimeline from './components/EventTimeline';\nimport axios from './axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [editingEvent, setEditingEvent] = useState(null); // State to keep track of the event being edited\n\n  useEffect(() => {\n    axios.get('/events').then(response => {\n      setEvents(response.data.map(event => ({\n        ...event,\n        startDate: new Date(event.startDate).toLocaleDateString(),\n        endDate: new Date(event.endDate).toLocaleDateString()\n      })));\n    }).catch(error => console.error('Error fetching events:', error));\n  }, []);\n  const saveEvent = (eventData, id) => {\n    const method = id ? 'put' : 'post';\n    const url = id ? `/events/${id}` : '/events';\n    axios[method](url, eventData).then(response => {\n      if (id) {\n        setEvents(events.map(event => event._id === id ? {\n          ...response.data,\n          startDate: new Date(response.data.startDate).toLocaleDateString(),\n          endDate: new Date(response.data.endDate).toLocaleDateString()\n        } : event));\n      } else {\n        setEvents([...events, {\n          ...response.data,\n          startDate: new Date(response.data.startDate).toLocaleDateString(),\n          endDate: new Date(response.data.endDate).toLocaleDateString()\n        }]);\n      }\n      setEditingEvent(null);\n    }).catch(error => console.error('Error saving event:', error));\n  };\n  const editEvent = id => {\n    const eventToEdit = events.find(event => event._id === id);\n    setEditingEvent(eventToEdit); // Set the event to be edited\n  };\n  const cancelEdit = () => {\n    setEditingEvent(null);\n  };\n  const deleteEvent = id => {\n    axios.delete(`/events/${id}`).then(() => {\n      // Remove the event from local state\n      setEvents(events.filter(event => event._id !== id));\n    }).catch(error => console.error('Error deleting event:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(EventForm, {\n      onSaveEvent: saveEvent,\n      onCancelEdit: cancelEdit,\n      editEventData: editingEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EventList, {\n      events: events,\n      onEdit: editEvent,\n      onDelete: deleteEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EventTimeline, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"g2k9hsqt0w5y+PLqF5OgMR1WZzk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","EventForm","EventList","EventTimeline","axios","jsxDEV","_jsxDEV","App","_s","events","setEvents","editingEvent","setEditingEvent","get","then","response","data","map","event","startDate","Date","toLocaleDateString","endDate","catch","error","console","saveEvent","eventData","id","method","url","_id","editEvent","eventToEdit","find","cancelEdit","deleteEvent","delete","filter","className","children","onSaveEvent","onCancelEdit","editEventData","fileName","_jsxFileName","lineNumber","columnNumber","onEdit","onDelete","_c","$RefreshReg$"],"sources":["/Users/ethan/WebstormProjects/frontend/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport EventForm from './components/EventForm';\nimport EventList from './components/EventList';\nimport EventTimeline from './components/EventTimeline';\nimport axios from './axios';\n\nconst App = () => {\n    const [events, setEvents] = useState([]);\n    const [editingEvent, setEditingEvent] = useState(null); // State to keep track of the event being edited\n\n    useEffect(() => {\n        axios.get('/events')\n            .then(response => {\n                setEvents(response.data.map(event => ({\n                    ...event,\n                    startDate: new Date(event.startDate).toLocaleDateString(),\n                    endDate: new Date(event.endDate).toLocaleDateString()\n                })));\n            })\n            .catch(error => console.error('Error fetching events:', error));\n    }, []);\n\n    const saveEvent = (eventData, id) => {\n        const method = id ? 'put' : 'post';\n        const url = id ? `/events/${id}` : '/events';\n\n        axios[method](url, eventData)\n            .then(response => {\n                if (id) {\n                    setEvents(events.map(event => event._id === id ? { ...response.data, startDate: new Date(response.data.startDate).toLocaleDateString(), endDate: new Date(response.data.endDate).toLocaleDateString() } : event));\n                } else {\n                    setEvents([...events, { ...response.data, startDate: new Date(response.data.startDate).toLocaleDateString(), endDate: new Date(response.data.endDate).toLocaleDateString() }]);\n                }\n                setEditingEvent(null);\n            })\n            .catch(error => console.error('Error saving event:', error));\n    };\n\n\n    const editEvent = (id) => {\n        const eventToEdit = events.find(event => event._id === id);\n        setEditingEvent(eventToEdit); // Set the event to be edited\n    };\n\n    const cancelEdit = () => {\n        setEditingEvent(null);\n    };\n\n    const deleteEvent = (id) => {\n        axios.delete(`/events/${id}`)\n            .then(() => {\n                // Remove the event from local state\n                setEvents(events.filter(event => event._id !== id));\n            })\n            .catch(error => console.error('Error deleting event:', error));\n    };\n\n    return (\n        <div className=\"App\">\n            <EventForm onSaveEvent={saveEvent} onCancelEdit={cancelEdit} editEventData={editingEvent}/>\n            <EventList events={events} onEdit={editEvent} onDelete={deleteEvent}/>\n            <EventTimeline events={events}/>\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}