{"ast":null,"code":"var _jsxFileName = \"/Users/ethan/WebstormProjects/frontend/src/components/EventTimeline.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { Timeline } from 'vis-timeline/standalone';\nimport 'vis-timeline/styles/vis-timeline-graph2d.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventTimeline = ({\n  events\n}) => {\n  _s();\n  const timelineRef = useRef();\n  const containerRef = useRef(null);\n  useEffect(() => {\n    // If the timeline is not initialized and the container is available\n    if (!timelineRef.current && containerRef.current) {\n      // Convert your events into timeline items\n      const items = events.map(event => ({\n        id: event.id,\n        content: event.title,\n        start: event.startDate,\n        end: event.endDate,\n        type: 'range',\n        style: `background-color: ${event.color || '#ffC0cb'};` // Use event's color or a default one\n      }));\n\n      // Options for the timeline\n      const options = {\n        stack: true,\n        // Whether to stack items\n        zoomable: true,\n        // Enable zooming\n        showCurrentTime: true,\n        // Show current time\n        start: items.length > 0 ? items[0].start : undefined,\n        // Set start date\n        end: items.length > 0 ? items[items.length - 1].end : undefined // Set end date\n        // ... more options as needed\n      };\n\n      // Initialize the timeline\n      timelineRef.current = new Timeline(containerRef.current, items, options);\n    }\n\n    // Cleanup function\n    return () => {\n      // Destroy the timeline if it was initialized\n      if (timelineRef.current) {\n        timelineRef.current.destroy();\n        timelineRef.current = null;\n      }\n    };\n  }, [events]); // Only re-run the effect if events change\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    style: {\n      height: '400px',\n      width: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 12\n  }, this);\n};\n_s(EventTimeline, \"QvzQ7yY0M4ISTj0VZfuA8jd0z5E=\");\n_c = EventTimeline;\nexport default EventTimeline;\nvar _c;\n$RefreshReg$(_c, \"EventTimeline\");","map":{"version":3,"names":["React","useEffect","useRef","Timeline","jsxDEV","_jsxDEV","EventTimeline","events","_s","timelineRef","containerRef","current","items","map","event","id","content","title","start","startDate","end","endDate","type","style","color","options","stack","zoomable","showCurrentTime","length","undefined","destroy","ref","height","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ethan/WebstormProjects/frontend/src/components/EventTimeline.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { Timeline } from 'vis-timeline/standalone';\nimport 'vis-timeline/styles/vis-timeline-graph2d.min.css';\n\nconst EventTimeline = ({ events }) => {\n    const timelineRef = useRef();\n    const containerRef = useRef(null);\n\n    useEffect(() => {\n        // If the timeline is not initialized and the container is available\n        if (!timelineRef.current && containerRef.current) {\n            // Convert your events into timeline items\n            const items = events.map(event => ({\n                id: event.id,\n                content: event.title,\n                start: event.startDate,\n                end: event.endDate,\n                type: 'range',\n                style: `background-color: ${event.color || '#ffC0cb'};` // Use event's color or a default one\n            }));\n\n            // Options for the timeline\n            const options = {\n                stack: true, // Whether to stack items\n                zoomable: true, // Enable zooming\n                showCurrentTime: true, // Show current time\n                start: items.length > 0 ? items[0].start : undefined, // Set start date\n                end: items.length > 0 ? items[items.length - 1].end : undefined, // Set end date\n                // ... more options as needed\n            };\n\n            // Initialize the timeline\n            timelineRef.current = new Timeline(containerRef.current, items, options);\n        }\n\n        // Cleanup function\n        return () => {\n            // Destroy the timeline if it was initialized\n            if (timelineRef.current) {\n                timelineRef.current.destroy();\n                timelineRef.current = null;\n            }\n        };\n    }, [events]); // Only re-run the effect if events change\n\n    return <div ref={containerRef} style={{ height: '400px', width: '100%' }} />;\n};\n\nexport default EventTimeline;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,OAAO,kDAAkD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAMC,WAAW,GAAGP,MAAM,CAAC,CAAC;EAC5B,MAAMQ,YAAY,GAAGR,MAAM,CAAC,IAAI,CAAC;EAEjCD,SAAS,CAAC,MAAM;IACZ;IACA,IAAI,CAACQ,WAAW,CAACE,OAAO,IAAID,YAAY,CAACC,OAAO,EAAE;MAC9C;MACA,MAAMC,KAAK,GAAGL,MAAM,CAACM,GAAG,CAACC,KAAK,KAAK;QAC/BC,EAAE,EAAED,KAAK,CAACC,EAAE;QACZC,OAAO,EAAEF,KAAK,CAACG,KAAK;QACpBC,KAAK,EAAEJ,KAAK,CAACK,SAAS;QACtBC,GAAG,EAAEN,KAAK,CAACO,OAAO;QAClBC,IAAI,EAAE,OAAO;QACbC,KAAK,EAAG,qBAAoBT,KAAK,CAACU,KAAK,IAAI,SAAU,GAAE,CAAC;MAC5D,CAAC,CAAC,CAAC;;MAEH;MACA,MAAMC,OAAO,GAAG;QACZC,KAAK,EAAE,IAAI;QAAE;QACbC,QAAQ,EAAE,IAAI;QAAE;QAChBC,eAAe,EAAE,IAAI;QAAE;QACvBV,KAAK,EAAEN,KAAK,CAACiB,MAAM,GAAG,CAAC,GAAGjB,KAAK,CAAC,CAAC,CAAC,CAACM,KAAK,GAAGY,SAAS;QAAE;QACtDV,GAAG,EAAER,KAAK,CAACiB,MAAM,GAAG,CAAC,GAAGjB,KAAK,CAACA,KAAK,CAACiB,MAAM,GAAG,CAAC,CAAC,CAACT,GAAG,GAAGU,SAAS,CAAE;QACjE;MACJ,CAAC;;MAED;MACArB,WAAW,CAACE,OAAO,GAAG,IAAIR,QAAQ,CAACO,YAAY,CAACC,OAAO,EAAEC,KAAK,EAAEa,OAAO,CAAC;IAC5E;;IAEA;IACA,OAAO,MAAM;MACT;MACA,IAAIhB,WAAW,CAACE,OAAO,EAAE;QACrBF,WAAW,CAACE,OAAO,CAACoB,OAAO,CAAC,CAAC;QAC7BtB,WAAW,CAACE,OAAO,GAAG,IAAI;MAC9B;IACJ,CAAC;EACL,CAAC,EAAE,CAACJ,MAAM,CAAC,CAAC,CAAC,CAAC;;EAEd,oBAAOF,OAAA;IAAK2B,GAAG,EAAEtB,YAAa;IAACa,KAAK,EAAE;MAAEU,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAChF,CAAC;AAAC9B,EAAA,CA1CIF,aAAa;AAAAiC,EAAA,GAAbjC,aAAa;AA4CnB,eAAeA,aAAa;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}