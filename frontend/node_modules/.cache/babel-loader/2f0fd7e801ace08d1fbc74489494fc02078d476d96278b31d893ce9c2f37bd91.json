{"ast":null,"code":"var _jsxFileName = \"/Users/ethan/WebstormProjects/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState } from 'react';\nimport EventForm from './components/EventForm';\nimport EventList from './components/EventList';\nimport EventTimeline from './components/EventTimeline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [editingEvent, setEditingEvent] = useState(null); // State to keep track of the event being edited\n\n  const saveEvent = (eventData, id) => {\n    if (id) {\n      // If id is provided, update the existing event\n      setEvents(events.map(event => event.id === id ? {\n        ...event,\n        ...eventData\n      } : event));\n    } else {\n      // If no id is provided, add a new event\n      setEvents([...events, {\n        ...eventData,\n        id: Date.now()\n      }]); // Ensure each event has a unique id\n    }\n    setEditingEvent(null); // Reset editing event after saving changes\n  };\n  const editEvent = id => {\n    const eventToEdit = events.find(event => event.id === id);\n    setEditingEvent(eventToEdit); // Set the event to be edited\n  };\n  const cancelEdit = () => {\n    setEditingEvent(null);\n  };\n  const deleteEvent = id => {\n    setEvents(events.filter(event => event.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(EventForm, {\n      onSaveEvent: saveEvent,\n      onCancelEdit: cancelEdit,\n      editEventData: editingEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EventList, {\n      events: events,\n      onEdit: editEvent,\n      onDelete: deleteEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EventTimeline, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"MBHAPglDip3+COp3MHfynuHqaO0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","EventForm","EventList","EventTimeline","jsxDEV","_jsxDEV","App","_s","events","setEvents","editingEvent","setEditingEvent","saveEvent","eventData","id","map","event","Date","now","editEvent","eventToEdit","find","cancelEdit","deleteEvent","filter","className","children","onSaveEvent","onCancelEdit","editEventData","fileName","_jsxFileName","lineNumber","columnNumber","onEdit","onDelete","_c","$RefreshReg$"],"sources":["/Users/ethan/WebstormProjects/frontend/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\nimport EventForm from './components/EventForm';\nimport EventList from './components/EventList';\nimport EventTimeline from './components/EventTimeline';\n\nconst App = () => {\n    const [events, setEvents] = useState([]);\n    const [editingEvent, setEditingEvent] = useState(null); // State to keep track of the event being edited\n\n    const saveEvent = (eventData, id) => {\n        if (id) {\n            // If id is provided, update the existing event\n            setEvents(events.map(event => event.id === id ? { ...event, ...eventData } : event));\n        } else {\n            // If no id is provided, add a new event\n            setEvents([...events, { ...eventData, id: Date.now() }]); // Ensure each event has a unique id\n        }\n        setEditingEvent(null); // Reset editing event after saving changes\n    };\n\n    const editEvent = (id) => {\n        const eventToEdit = events.find(event => event.id === id);\n        setEditingEvent(eventToEdit); // Set the event to be edited\n    };\n\n    const cancelEdit = () => {\n        setEditingEvent(null);\n    };\n\n    const deleteEvent = (id) => {\n        setEvents(events.filter(event => event.id !== id));\n    };\n\n    return (\n        <div className=\"App\">\n            <EventForm onSaveEvent={saveEvent} onCancelEdit={cancelEdit} editEventData={editingEvent}/>\n            <EventList events={events} onEdit={editEvent} onDelete={deleteEvent}/>\n            <EventTimeline events={events}/>\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,aAAa,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAExD,MAAMY,SAAS,GAAGA,CAACC,SAAS,EAAEC,EAAE,KAAK;IACjC,IAAIA,EAAE,EAAE;MACJ;MACAL,SAAS,CAACD,MAAM,CAACO,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACF,EAAE,KAAKA,EAAE,GAAG;QAAE,GAAGE,KAAK;QAAE,GAAGH;MAAU,CAAC,GAAGG,KAAK,CAAC,CAAC;IACxF,CAAC,MAAM;MACH;MACAP,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAE;QAAE,GAAGK,SAAS;QAAEC,EAAE,EAAEG,IAAI,CAACC,GAAG,CAAC;MAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9D;IACAP,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;EAC3B,CAAC;EAED,MAAMQ,SAAS,GAAIL,EAAE,IAAK;IACtB,MAAMM,WAAW,GAAGZ,MAAM,CAACa,IAAI,CAACL,KAAK,IAAIA,KAAK,CAACF,EAAE,KAAKA,EAAE,CAAC;IACzDH,eAAe,CAACS,WAAW,CAAC,CAAC,CAAC;EAClC,CAAC;EAED,MAAME,UAAU,GAAGA,CAAA,KAAM;IACrBX,eAAe,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,MAAMY,WAAW,GAAIT,EAAE,IAAK;IACxBL,SAAS,CAACD,MAAM,CAACgB,MAAM,CAACR,KAAK,IAAIA,KAAK,CAACF,EAAE,KAAKA,EAAE,CAAC,CAAC;EACtD,CAAC;EAED,oBACIT,OAAA;IAAKoB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBrB,OAAA,CAACJ,SAAS;MAAC0B,WAAW,EAAEf,SAAU;MAACgB,YAAY,EAAEN,UAAW;MAACO,aAAa,EAAEnB;IAAa;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC3F5B,OAAA,CAACH,SAAS;MAACM,MAAM,EAAEA,MAAO;MAAC0B,MAAM,EAAEf,SAAU;MAACgB,QAAQ,EAAEZ;IAAY;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACtE5B,OAAA,CAACF,aAAa;MAACK,MAAM,EAAEA;IAAO;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEd,CAAC;AAAC1B,EAAA,CAnCID,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAqCT,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}