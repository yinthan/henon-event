{"ast":null,"code":"var _jsxFileName = \"/Users/ethan/WebstormProjects/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState } from 'react';\nimport EventForm from './components/EventForm';\nimport EventList from './components/EventList';\nimport EventTimeline from './components/EventTimeline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [editingEvent, setEditingEvent] = useState(null); // State to keep track of the event being edited\n\n  const saveEvent = eventData => {\n    if (editingEvent) {\n      // If we are editing an event, update the existing event\n      setEvents(events.map(event => event.id === editingEvent.id ? {\n        ...eventData,\n        id: event.id\n      } : event));\n      setEditingEvent(null); // Reset editing event after saving changes\n    } else {\n      // If we are not editing, add a new event\n      setEvents([...events, {\n        ...eventData,\n        id: Date.now()\n      }]);\n    }\n  };\n  const editEvent = id => {\n    const eventToEdit = events.find(event => event.id === id);\n    setEditingEvent(eventToEdit); // Set the event to be edited\n  };\n  const deleteEvent = id => {\n    setEvents(events.filter(event => event.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(EventForm, {\n      onSaveEvent: saveEvent,\n      editEventData: editingEvent,\n      onCancelEdit: cancelEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EventList, {\n      events: events,\n      onEdit: editEvent,\n      onDelete: deleteEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EventTimeline, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"MBHAPglDip3+COp3MHfynuHqaO0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","EventForm","EventList","EventTimeline","jsxDEV","_jsxDEV","App","_s","events","setEvents","editingEvent","setEditingEvent","saveEvent","eventData","map","event","id","Date","now","editEvent","eventToEdit","find","deleteEvent","filter","className","children","onSaveEvent","editEventData","onCancelEdit","cancelEdit","fileName","_jsxFileName","lineNumber","columnNumber","onEdit","onDelete","_c","$RefreshReg$"],"sources":["/Users/ethan/WebstormProjects/frontend/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\nimport EventForm from './components/EventForm';\nimport EventList from './components/EventList';\nimport EventTimeline from './components/EventTimeline';\n\nconst App = () => {\n    const [events, setEvents] = useState([]);\n    const [editingEvent, setEditingEvent] = useState(null); // State to keep track of the event being edited\n\n    const saveEvent = (eventData) => {\n        if (editingEvent) {\n            // If we are editing an event, update the existing event\n            setEvents(events.map(event => event.id === editingEvent.id ? { ...eventData, id: event.id } : event));\n            setEditingEvent(null); // Reset editing event after saving changes\n        } else {\n            // If we are not editing, add a new event\n            setEvents([...events, { ...eventData, id: Date.now() }]);\n        }\n    };\n\n    const editEvent = (id) => {\n        const eventToEdit = events.find(event => event.id === id);\n        setEditingEvent(eventToEdit); // Set the event to be edited\n    };\n\n    const deleteEvent = (id) => {\n        setEvents(events.filter(event => event.id !== id));\n    };\n\n    return (\n        <div className=\"App\">\n            <EventForm onSaveEvent={saveEvent} editEventData={editingEvent} onCancelEdit={cancelEdit} />\n            <EventList events={events} onEdit={editEvent} onDelete={deleteEvent}/>\n            <EventTimeline events={events}/>\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,aAAa,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAExD,MAAMY,SAAS,GAAIC,SAAS,IAAK;IAC7B,IAAIH,YAAY,EAAE;MACd;MACAD,SAAS,CAACD,MAAM,CAACM,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACC,EAAE,KAAKN,YAAY,CAACM,EAAE,GAAG;QAAE,GAAGH,SAAS;QAAEG,EAAE,EAAED,KAAK,CAACC;MAAG,CAAC,GAAGD,KAAK,CAAC,CAAC;MACrGJ,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;IAC3B,CAAC,MAAM;MACH;MACAF,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAE;QAAE,GAAGK,SAAS;QAAEG,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC;MAAE,CAAC,CAAC,CAAC;IAC5D;EACJ,CAAC;EAED,MAAMC,SAAS,GAAIH,EAAE,IAAK;IACtB,MAAMI,WAAW,GAAGZ,MAAM,CAACa,IAAI,CAACN,KAAK,IAAIA,KAAK,CAACC,EAAE,KAAKA,EAAE,CAAC;IACzDL,eAAe,CAACS,WAAW,CAAC,CAAC,CAAC;EAClC,CAAC;EAED,MAAME,WAAW,GAAIN,EAAE,IAAK;IACxBP,SAAS,CAACD,MAAM,CAACe,MAAM,CAACR,KAAK,IAAIA,KAAK,CAACC,EAAE,KAAKA,EAAE,CAAC,CAAC;EACtD,CAAC;EAED,oBACIX,OAAA;IAAKmB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBpB,OAAA,CAACJ,SAAS;MAACyB,WAAW,EAAEd,SAAU;MAACe,aAAa,EAAEjB,YAAa;MAACkB,YAAY,EAAEC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5F5B,OAAA,CAACH,SAAS;MAACM,MAAM,EAAEA,MAAO;MAAC0B,MAAM,EAAEf,SAAU;MAACgB,QAAQ,EAAEb;IAAY;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACtE5B,OAAA,CAACF,aAAa;MAACK,MAAM,EAAEA;IAAO;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEd,CAAC;AAAC1B,EAAA,CA/BID,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAiCT,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}